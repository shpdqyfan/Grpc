// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnmi.proto

#ifndef PROTOBUF_gnmi_2eproto__INCLUDED
#define PROTOBUF_gnmi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)

namespace gnmi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gnmi_2eproto();
void protobuf_AssignDesc_gnmi_2eproto();
void protobuf_ShutdownFile_gnmi_2eproto();

class Alias;
class AliasList;
class CapabilityRequest;
class CapabilityResponse;
class Decimal64;
class Error;
class GetRequest;
class GetResponse;
class ModelData;
class Notification;
class Path;
class PathElem;
class Poll;
class QOSMarking;
class ScalarArray;
class SetRequest;
class SetResponse;
class SubscribeRequest;
class SubscribeResponse;
class Subscription;
class SubscriptionList;
class TypedValue;
class Update;
class UpdateResult;
class Value;

enum SubscriptionList_Mode {
  SubscriptionList_Mode_STREAM = 0,
  SubscriptionList_Mode_ONCE = 1,
  SubscriptionList_Mode_POLL = 2,
  SubscriptionList_Mode_SubscriptionList_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscriptionList_Mode_SubscriptionList_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscriptionList_Mode_IsValid(int value);
const SubscriptionList_Mode SubscriptionList_Mode_Mode_MIN = SubscriptionList_Mode_STREAM;
const SubscriptionList_Mode SubscriptionList_Mode_Mode_MAX = SubscriptionList_Mode_POLL;
const int SubscriptionList_Mode_Mode_ARRAYSIZE = SubscriptionList_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionList_Mode_descriptor();
inline const ::std::string& SubscriptionList_Mode_Name(SubscriptionList_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionList_Mode_descriptor(), value);
}
inline bool SubscriptionList_Mode_Parse(
    const ::std::string& name, SubscriptionList_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionList_Mode>(
    SubscriptionList_Mode_descriptor(), name, value);
}
enum UpdateResult_Operation {
  UpdateResult_Operation_INVALID = 0,
  UpdateResult_Operation_DELETE = 1,
  UpdateResult_Operation_REPLACE = 2,
  UpdateResult_Operation_UPDATE = 3,
  UpdateResult_Operation_UpdateResult_Operation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdateResult_Operation_UpdateResult_Operation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdateResult_Operation_IsValid(int value);
const UpdateResult_Operation UpdateResult_Operation_Operation_MIN = UpdateResult_Operation_INVALID;
const UpdateResult_Operation UpdateResult_Operation_Operation_MAX = UpdateResult_Operation_UPDATE;
const int UpdateResult_Operation_Operation_ARRAYSIZE = UpdateResult_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateResult_Operation_descriptor();
inline const ::std::string& UpdateResult_Operation_Name(UpdateResult_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateResult_Operation_descriptor(), value);
}
inline bool UpdateResult_Operation_Parse(
    const ::std::string& name, UpdateResult_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateResult_Operation>(
    UpdateResult_Operation_descriptor(), name, value);
}
enum GetRequest_DataType {
  GetRequest_DataType_ALL = 0,
  GetRequest_DataType_CONFIG = 1,
  GetRequest_DataType_STATE = 2,
  GetRequest_DataType_OPERATIONAL = 3,
  GetRequest_DataType_GetRequest_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetRequest_DataType_GetRequest_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetRequest_DataType_IsValid(int value);
const GetRequest_DataType GetRequest_DataType_DataType_MIN = GetRequest_DataType_ALL;
const GetRequest_DataType GetRequest_DataType_DataType_MAX = GetRequest_DataType_OPERATIONAL;
const int GetRequest_DataType_DataType_ARRAYSIZE = GetRequest_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetRequest_DataType_descriptor();
inline const ::std::string& GetRequest_DataType_Name(GetRequest_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetRequest_DataType_descriptor(), value);
}
inline bool GetRequest_DataType_Parse(
    const ::std::string& name, GetRequest_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetRequest_DataType>(
    GetRequest_DataType_descriptor(), name, value);
}
enum Encoding {
  JSON = 0,
  BYTES = 1,
  PROTO = 2,
  ASCII = 3,
  JSON_IETF = 4,
  Encoding_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Encoding_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Encoding_IsValid(int value);
const Encoding Encoding_MIN = JSON;
const Encoding Encoding_MAX = JSON_IETF;
const int Encoding_ARRAYSIZE = Encoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* Encoding_descriptor();
inline const ::std::string& Encoding_Name(Encoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    Encoding_descriptor(), value);
}
inline bool Encoding_Parse(
    const ::std::string& name, Encoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Encoding>(
    Encoding_descriptor(), name, value);
}
enum SubscriptionMode {
  TARGET_DEFINED = 0,
  ON_CHANGE = 1,
  SAMPLE = 2,
  SubscriptionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscriptionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscriptionMode_IsValid(int value);
const SubscriptionMode SubscriptionMode_MIN = TARGET_DEFINED;
const SubscriptionMode SubscriptionMode_MAX = SAMPLE;
const int SubscriptionMode_ARRAYSIZE = SubscriptionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionMode_descriptor();
inline const ::std::string& SubscriptionMode_Name(SubscriptionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionMode_descriptor(), value);
}
inline bool SubscriptionMode_Parse(
    const ::std::string& name, SubscriptionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionMode>(
    SubscriptionMode_descriptor(), name, value);
}
// ===================================================================

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  void Swap(Notification* other);

  // implements Message ----------------------------------------------

  inline Notification* New() const { return New(NULL); }

  Notification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // optional .gnmi.Path prefix = 2;
  bool has_prefix() const;
  void clear_prefix();
  static const int kPrefixFieldNumber = 2;
  const ::gnmi::Path& prefix() const;
  ::gnmi::Path* mutable_prefix();
  ::gnmi::Path* release_prefix();
  void set_allocated_prefix(::gnmi::Path* prefix);

  // optional string alias = 3;
  void clear_alias();
  static const int kAliasFieldNumber = 3;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // repeated .gnmi.Update update = 4;
  int update_size() const;
  void clear_update();
  static const int kUpdateFieldNumber = 4;
  const ::gnmi::Update& update(int index) const;
  ::gnmi::Update* mutable_update(int index);
  ::gnmi::Update* add_update();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
      mutable_update();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
      update() const;

  // repeated .gnmi.Path delete = 5;
  int delete__size() const;
  void clear_delete_();
  static const int kDeleteFieldNumber = 5;
  const ::gnmi::Path& delete_(int index) const;
  ::gnmi::Path* mutable_delete_(int index);
  ::gnmi::Path* add_delete_();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
      mutable_delete_();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
      delete_() const;

  // @@protoc_insertion_point(class_scope:gnmi.Notification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 timestamp_;
  ::gnmi::Path* prefix_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update > update_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path > delete__;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Notification* default_instance_;
};
// -------------------------------------------------------------------

class Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Update) */ {
 public:
  Update();
  virtual ~Update();

  Update(const Update& from);

  inline Update& operator=(const Update& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Update& default_instance();

  void Swap(Update* other);

  // implements Message ----------------------------------------------

  inline Update* New() const { return New(NULL); }

  Update* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Update& from);
  void MergeFrom(const Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Path path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::gnmi::Path& path() const;
  ::gnmi::Path* mutable_path();
  ::gnmi::Path* release_path();
  void set_allocated_path(::gnmi::Path* path);

  // optional .gnmi.Value value = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_value() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_value();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kValueFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::gnmi::Value& value() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Value* mutable_value();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Value* release_value();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_value(::gnmi::Value* value);

  // optional .gnmi.TypedValue val = 3;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 3;
  const ::gnmi::TypedValue& val() const;
  ::gnmi::TypedValue* mutable_val();
  ::gnmi::TypedValue* release_val();
  void set_allocated_val(::gnmi::TypedValue* val);

  // optional uint32 duplicates = 4;
  void clear_duplicates();
  static const int kDuplicatesFieldNumber = 4;
  ::google::protobuf::uint32 duplicates() const;
  void set_duplicates(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gnmi.Update)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* path_;
  ::gnmi::Value* value_;
  ::gnmi::TypedValue* val_;
  ::google::protobuf::uint32 duplicates_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Update* default_instance_;
};
// -------------------------------------------------------------------

class TypedValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.TypedValue) */ {
 public:
  TypedValue();
  virtual ~TypedValue();

  TypedValue(const TypedValue& from);

  inline TypedValue& operator=(const TypedValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypedValue& default_instance();

  enum ValueCase {
    kStringVal = 1,
    kIntVal = 2,
    kUintVal = 3,
    kBoolVal = 4,
    kBytesVal = 5,
    kFloatVal = 6,
    kDecimalVal = 7,
    kLeaflistVal = 8,
    kAnyVal = 9,
    kJsonVal = 10,
    kJsonIetfVal = 11,
    kAsciiVal = 12,
    VALUE_NOT_SET = 0,
  };

  void Swap(TypedValue* other);

  // implements Message ----------------------------------------------

  inline TypedValue* New() const { return New(NULL); }

  TypedValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypedValue& from);
  void MergeFrom(const TypedValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypedValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_val = 1;
  private:
  bool has_string_val() const;
  public:
  void clear_string_val();
  static const int kStringValFieldNumber = 1;
  const ::std::string& string_val() const;
  void set_string_val(const ::std::string& value);
  void set_string_val(const char* value);
  void set_string_val(const char* value, size_t size);
  ::std::string* mutable_string_val();
  ::std::string* release_string_val();
  void set_allocated_string_val(::std::string* string_val);

  // optional int64 int_val = 2;
  private:
  bool has_int_val() const;
  public:
  void clear_int_val();
  static const int kIntValFieldNumber = 2;
  ::google::protobuf::int64 int_val() const;
  void set_int_val(::google::protobuf::int64 value);

  // optional uint64 uint_val = 3;
  private:
  bool has_uint_val() const;
  public:
  void clear_uint_val();
  static const int kUintValFieldNumber = 3;
  ::google::protobuf::uint64 uint_val() const;
  void set_uint_val(::google::protobuf::uint64 value);

  // optional bool bool_val = 4;
  private:
  bool has_bool_val() const;
  public:
  void clear_bool_val();
  static const int kBoolValFieldNumber = 4;
  bool bool_val() const;
  void set_bool_val(bool value);

  // optional bytes bytes_val = 5;
  private:
  bool has_bytes_val() const;
  public:
  void clear_bytes_val();
  static const int kBytesValFieldNumber = 5;
  const ::std::string& bytes_val() const;
  void set_bytes_val(const ::std::string& value);
  void set_bytes_val(const char* value);
  void set_bytes_val(const void* value, size_t size);
  ::std::string* mutable_bytes_val();
  ::std::string* release_bytes_val();
  void set_allocated_bytes_val(::std::string* bytes_val);

  // optional float float_val = 6;
  private:
  bool has_float_val() const;
  public:
  void clear_float_val();
  static const int kFloatValFieldNumber = 6;
  float float_val() const;
  void set_float_val(float value);

  // optional .gnmi.Decimal64 decimal_val = 7;
  bool has_decimal_val() const;
  void clear_decimal_val();
  static const int kDecimalValFieldNumber = 7;
  const ::gnmi::Decimal64& decimal_val() const;
  ::gnmi::Decimal64* mutable_decimal_val();
  ::gnmi::Decimal64* release_decimal_val();
  void set_allocated_decimal_val(::gnmi::Decimal64* decimal_val);

  // optional .gnmi.ScalarArray leaflist_val = 8;
  bool has_leaflist_val() const;
  void clear_leaflist_val();
  static const int kLeaflistValFieldNumber = 8;
  const ::gnmi::ScalarArray& leaflist_val() const;
  ::gnmi::ScalarArray* mutable_leaflist_val();
  ::gnmi::ScalarArray* release_leaflist_val();
  void set_allocated_leaflist_val(::gnmi::ScalarArray* leaflist_val);

  // optional .google.protobuf.Any any_val = 9;
  bool has_any_val() const;
  void clear_any_val();
  static const int kAnyValFieldNumber = 9;
  const ::google::protobuf::Any& any_val() const;
  ::google::protobuf::Any* mutable_any_val();
  ::google::protobuf::Any* release_any_val();
  void set_allocated_any_val(::google::protobuf::Any* any_val);

  // optional bytes json_val = 10;
  private:
  bool has_json_val() const;
  public:
  void clear_json_val();
  static const int kJsonValFieldNumber = 10;
  const ::std::string& json_val() const;
  void set_json_val(const ::std::string& value);
  void set_json_val(const char* value);
  void set_json_val(const void* value, size_t size);
  ::std::string* mutable_json_val();
  ::std::string* release_json_val();
  void set_allocated_json_val(::std::string* json_val);

  // optional bytes json_ietf_val = 11;
  private:
  bool has_json_ietf_val() const;
  public:
  void clear_json_ietf_val();
  static const int kJsonIetfValFieldNumber = 11;
  const ::std::string& json_ietf_val() const;
  void set_json_ietf_val(const ::std::string& value);
  void set_json_ietf_val(const char* value);
  void set_json_ietf_val(const void* value, size_t size);
  ::std::string* mutable_json_ietf_val();
  ::std::string* release_json_ietf_val();
  void set_allocated_json_ietf_val(::std::string* json_ietf_val);

  // optional string ascii_val = 12;
  private:
  bool has_ascii_val() const;
  public:
  void clear_ascii_val();
  static const int kAsciiValFieldNumber = 12;
  const ::std::string& ascii_val() const;
  void set_ascii_val(const ::std::string& value);
  void set_ascii_val(const char* value);
  void set_ascii_val(const char* value, size_t size);
  ::std::string* mutable_ascii_val();
  ::std::string* release_ascii_val();
  void set_allocated_ascii_val(::std::string* ascii_val);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:gnmi.TypedValue)
 private:
  inline void set_has_string_val();
  inline void set_has_int_val();
  inline void set_has_uint_val();
  inline void set_has_bool_val();
  inline void set_has_bytes_val();
  inline void set_has_float_val();
  inline void set_has_decimal_val();
  inline void set_has_leaflist_val();
  inline void set_has_any_val();
  inline void set_has_json_val();
  inline void set_has_json_ietf_val();
  inline void set_has_ascii_val();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_val_;
    ::google::protobuf::int64 int_val_;
    ::google::protobuf::uint64 uint_val_;
    bool bool_val_;
    ::google::protobuf::internal::ArenaStringPtr bytes_val_;
    float float_val_;
    ::gnmi::Decimal64* decimal_val_;
    ::gnmi::ScalarArray* leaflist_val_;
    ::google::protobuf::Any* any_val_;
    ::google::protobuf::internal::ArenaStringPtr json_val_;
    ::google::protobuf::internal::ArenaStringPtr json_ietf_val_;
    ::google::protobuf::internal::ArenaStringPtr ascii_val_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static TypedValue* default_instance_;
};
// -------------------------------------------------------------------

class Path : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Path) */ {
 public:
  Path();
  virtual ~Path();

  Path(const Path& from);

  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path& default_instance();

  void Swap(Path* other);

  // implements Message ----------------------------------------------

  inline Path* New() const { return New(NULL); }

  Path* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Path& from);
  void MergeFrom(const Path& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Path* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string element = 1 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR int element_size() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_element();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kElementFieldNumber = 1;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& element(int index) const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_element(int index);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_element(int index, const ::std::string& value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_element(int index, const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_element(int index, const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* add_element();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void add_element(const ::std::string& value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void add_element(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void add_element(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::RepeatedPtrField< ::std::string>& element() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_element();

  // optional string origin = 2;
  void clear_origin();
  static const int kOriginFieldNumber = 2;
  const ::std::string& origin() const;
  void set_origin(const ::std::string& value);
  void set_origin(const char* value);
  void set_origin(const char* value, size_t size);
  ::std::string* mutable_origin();
  ::std::string* release_origin();
  void set_allocated_origin(::std::string* origin);

  // repeated .gnmi.PathElem elem = 3;
  int elem_size() const;
  void clear_elem();
  static const int kElemFieldNumber = 3;
  const ::gnmi::PathElem& elem(int index) const;
  ::gnmi::PathElem* mutable_elem(int index);
  ::gnmi::PathElem* add_elem();
  ::google::protobuf::RepeatedPtrField< ::gnmi::PathElem >*
      mutable_elem();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::PathElem >&
      elem() const;

  // optional string target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // @@protoc_insertion_point(class_scope:gnmi.Path)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> element_;
  ::google::protobuf::internal::ArenaStringPtr origin_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::PathElem > elem_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Path* default_instance_;
};
// -------------------------------------------------------------------

class PathElem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.PathElem) */ {
 public:
  PathElem();
  virtual ~PathElem();

  PathElem(const PathElem& from);

  inline PathElem& operator=(const PathElem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathElem& default_instance();

  void Swap(PathElem* other);

  // implements Message ----------------------------------------------

  inline PathElem* New() const { return New(NULL); }

  PathElem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathElem& from);
  void MergeFrom(const PathElem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathElem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // map<string, string> key = 2;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      key() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_key();

  // @@protoc_insertion_point(class_scope:gnmi.PathElem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      PathElem_KeyEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static PathElem* default_instance_;
};
// -------------------------------------------------------------------

class Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  void Swap(Value* other);

  // implements Message ----------------------------------------------

  inline Value* New() const { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional .gnmi.Encoding type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::gnmi::Encoding type() const;
  void set_type(::gnmi::Encoding value);

  // @@protoc_insertion_point(class_scope:gnmi.Value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Value* default_instance_;
};
// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .google.protobuf.Any data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:gnmi.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::uint32 code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Error* default_instance_;
};
// -------------------------------------------------------------------

class Decimal64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Decimal64) */ {
 public:
  Decimal64();
  virtual ~Decimal64();

  Decimal64(const Decimal64& from);

  inline Decimal64& operator=(const Decimal64& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Decimal64& default_instance();

  void Swap(Decimal64* other);

  // implements Message ----------------------------------------------

  inline Decimal64* New() const { return New(NULL); }

  Decimal64* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Decimal64& from);
  void MergeFrom(const Decimal64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Decimal64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 digits = 1;
  void clear_digits();
  static const int kDigitsFieldNumber = 1;
  ::google::protobuf::int64 digits() const;
  void set_digits(::google::protobuf::int64 value);

  // optional uint32 precision = 2;
  void clear_precision();
  static const int kPrecisionFieldNumber = 2;
  ::google::protobuf::uint32 precision() const;
  void set_precision(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gnmi.Decimal64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 digits_;
  ::google::protobuf::uint32 precision_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Decimal64* default_instance_;
};
// -------------------------------------------------------------------

class ScalarArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.ScalarArray) */ {
 public:
  ScalarArray();
  virtual ~ScalarArray();

  ScalarArray(const ScalarArray& from);

  inline ScalarArray& operator=(const ScalarArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScalarArray& default_instance();

  void Swap(ScalarArray* other);

  // implements Message ----------------------------------------------

  inline ScalarArray* New() const { return New(NULL); }

  ScalarArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScalarArray& from);
  void MergeFrom(const ScalarArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScalarArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gnmi.TypedValue element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  const ::gnmi::TypedValue& element(int index) const;
  ::gnmi::TypedValue* mutable_element(int index);
  ::gnmi::TypedValue* add_element();
  ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >*
      mutable_element();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >&
      element() const;

  // @@protoc_insertion_point(class_scope:gnmi.ScalarArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue > element_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static ScalarArray* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.SubscribeRequest) */ {
 public:
  SubscribeRequest();
  virtual ~SubscribeRequest();

  SubscribeRequest(const SubscribeRequest& from);

  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeRequest& default_instance();

  enum RequestCase {
    kSubscribe = 1,
    kPoll = 3,
    kAliases = 4,
    REQUEST_NOT_SET = 0,
  };

  void Swap(SubscribeRequest* other);

  // implements Message ----------------------------------------------

  inline SubscribeRequest* New() const { return New(NULL); }

  SubscribeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeRequest& from);
  void MergeFrom(const SubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscribeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.SubscriptionList subscribe = 1;
  bool has_subscribe() const;
  void clear_subscribe();
  static const int kSubscribeFieldNumber = 1;
  const ::gnmi::SubscriptionList& subscribe() const;
  ::gnmi::SubscriptionList* mutable_subscribe();
  ::gnmi::SubscriptionList* release_subscribe();
  void set_allocated_subscribe(::gnmi::SubscriptionList* subscribe);

  // optional .gnmi.Poll poll = 3;
  bool has_poll() const;
  void clear_poll();
  static const int kPollFieldNumber = 3;
  const ::gnmi::Poll& poll() const;
  ::gnmi::Poll* mutable_poll();
  ::gnmi::Poll* release_poll();
  void set_allocated_poll(::gnmi::Poll* poll);

  // optional .gnmi.AliasList aliases = 4;
  bool has_aliases() const;
  void clear_aliases();
  static const int kAliasesFieldNumber = 4;
  const ::gnmi::AliasList& aliases() const;
  ::gnmi::AliasList* mutable_aliases();
  ::gnmi::AliasList* release_aliases();
  void set_allocated_aliases(::gnmi::AliasList* aliases);

  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:gnmi.SubscribeRequest)
 private:
  inline void set_has_subscribe();
  inline void set_has_poll();
  inline void set_has_aliases();

  inline bool has_request() const;
  void clear_request();
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union RequestUnion {
    RequestUnion() {}
    ::gnmi::SubscriptionList* subscribe_;
    ::gnmi::Poll* poll_;
    ::gnmi::AliasList* aliases_;
  } request_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static SubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class Poll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Poll) */ {
 public:
  Poll();
  virtual ~Poll();

  Poll(const Poll& from);

  inline Poll& operator=(const Poll& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Poll& default_instance();

  void Swap(Poll* other);

  // implements Message ----------------------------------------------

  inline Poll* New() const { return New(NULL); }

  Poll* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Poll& from);
  void MergeFrom(const Poll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Poll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gnmi.Poll)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Poll* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.SubscribeResponse) */ {
 public:
  SubscribeResponse();
  virtual ~SubscribeResponse();

  SubscribeResponse(const SubscribeResponse& from);

  inline SubscribeResponse& operator=(const SubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeResponse& default_instance();

  enum ResponseCase {
    kUpdate = 1,
    kSyncResponse = 3,
    kError = 4,
    RESPONSE_NOT_SET = 0,
  };

  void Swap(SubscribeResponse* other);

  // implements Message ----------------------------------------------

  inline SubscribeResponse* New() const { return New(NULL); }

  SubscribeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeResponse& from);
  void MergeFrom(const SubscribeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscribeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Notification update = 1;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 1;
  const ::gnmi::Notification& update() const;
  ::gnmi::Notification* mutable_update();
  ::gnmi::Notification* release_update();
  void set_allocated_update(::gnmi::Notification* update);

  // optional bool sync_response = 3;
  private:
  bool has_sync_response() const;
  public:
  void clear_sync_response();
  static const int kSyncResponseFieldNumber = 3;
  bool sync_response() const;
  void set_sync_response(bool value);

  // optional .gnmi.Error error = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_error() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kErrorFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::gnmi::Error& error() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* mutable_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* release_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_error(::gnmi::Error* error);

  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:gnmi.SubscribeResponse)
 private:
  inline void set_has_update();
  inline void set_has_sync_response();
  inline void set_has_error();

  inline bool has_response() const;
  void clear_response();
  inline void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union ResponseUnion {
    ResponseUnion() {}
    ::gnmi::Notification* update_;
    bool sync_response_;
    ::gnmi::Error* error_;
  } response_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static SubscribeResponse* default_instance_;
};
// -------------------------------------------------------------------

class SubscriptionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.SubscriptionList) */ {
 public:
  SubscriptionList();
  virtual ~SubscriptionList();

  SubscriptionList(const SubscriptionList& from);

  inline SubscriptionList& operator=(const SubscriptionList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionList& default_instance();

  void Swap(SubscriptionList* other);

  // implements Message ----------------------------------------------

  inline SubscriptionList* New() const { return New(NULL); }

  SubscriptionList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscriptionList& from);
  void MergeFrom(const SubscriptionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscriptionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SubscriptionList_Mode Mode;
  static const Mode STREAM =
    SubscriptionList_Mode_STREAM;
  static const Mode ONCE =
    SubscriptionList_Mode_ONCE;
  static const Mode POLL =
    SubscriptionList_Mode_POLL;
  static inline bool Mode_IsValid(int value) {
    return SubscriptionList_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    SubscriptionList_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    SubscriptionList_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    SubscriptionList_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return SubscriptionList_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return SubscriptionList_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return SubscriptionList_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .gnmi.Path prefix = 1;
  bool has_prefix() const;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::gnmi::Path& prefix() const;
  ::gnmi::Path* mutable_prefix();
  ::gnmi::Path* release_prefix();
  void set_allocated_prefix(::gnmi::Path* prefix);

  // repeated .gnmi.Subscription subscription = 2;
  int subscription_size() const;
  void clear_subscription();
  static const int kSubscriptionFieldNumber = 2;
  const ::gnmi::Subscription& subscription(int index) const;
  ::gnmi::Subscription* mutable_subscription(int index);
  ::gnmi::Subscription* add_subscription();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >*
      mutable_subscription();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >&
      subscription() const;

  // optional bool use_aliases = 3;
  void clear_use_aliases();
  static const int kUseAliasesFieldNumber = 3;
  bool use_aliases() const;
  void set_use_aliases(bool value);

  // optional .gnmi.QOSMarking qos = 4;
  bool has_qos() const;
  void clear_qos();
  static const int kQosFieldNumber = 4;
  const ::gnmi::QOSMarking& qos() const;
  ::gnmi::QOSMarking* mutable_qos();
  ::gnmi::QOSMarking* release_qos();
  void set_allocated_qos(::gnmi::QOSMarking* qos);

  // optional .gnmi.SubscriptionList.Mode mode = 5;
  void clear_mode();
  static const int kModeFieldNumber = 5;
  ::gnmi::SubscriptionList_Mode mode() const;
  void set_mode(::gnmi::SubscriptionList_Mode value);

  // optional bool allow_aggregation = 6;
  void clear_allow_aggregation();
  static const int kAllowAggregationFieldNumber = 6;
  bool allow_aggregation() const;
  void set_allow_aggregation(bool value);

  // repeated .gnmi.ModelData use_models = 7;
  int use_models_size() const;
  void clear_use_models();
  static const int kUseModelsFieldNumber = 7;
  const ::gnmi::ModelData& use_models(int index) const;
  ::gnmi::ModelData* mutable_use_models(int index);
  ::gnmi::ModelData* add_use_models();
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
      mutable_use_models();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
      use_models() const;

  // optional .gnmi.Encoding encoding = 8;
  void clear_encoding();
  static const int kEncodingFieldNumber = 8;
  ::gnmi::Encoding encoding() const;
  void set_encoding(::gnmi::Encoding value);

  // optional bool updates_only = 9;
  void clear_updates_only();
  static const int kUpdatesOnlyFieldNumber = 9;
  bool updates_only() const;
  void set_updates_only(bool value);

  // @@protoc_insertion_point(class_scope:gnmi.SubscriptionList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* prefix_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription > subscription_;
  ::gnmi::QOSMarking* qos_;
  int mode_;
  bool use_aliases_;
  bool allow_aggregation_;
  bool updates_only_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData > use_models_;
  int encoding_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static SubscriptionList* default_instance_;
};
// -------------------------------------------------------------------

class Subscription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Subscription) */ {
 public:
  Subscription();
  virtual ~Subscription();

  Subscription(const Subscription& from);

  inline Subscription& operator=(const Subscription& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Subscription& default_instance();

  void Swap(Subscription* other);

  // implements Message ----------------------------------------------

  inline Subscription* New() const { return New(NULL); }

  Subscription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Subscription& from);
  void MergeFrom(const Subscription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Subscription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Path path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::gnmi::Path& path() const;
  ::gnmi::Path* mutable_path();
  ::gnmi::Path* release_path();
  void set_allocated_path(::gnmi::Path* path);

  // optional .gnmi.SubscriptionMode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::gnmi::SubscriptionMode mode() const;
  void set_mode(::gnmi::SubscriptionMode value);

  // optional uint64 sample_interval = 3;
  void clear_sample_interval();
  static const int kSampleIntervalFieldNumber = 3;
  ::google::protobuf::uint64 sample_interval() const;
  void set_sample_interval(::google::protobuf::uint64 value);

  // optional bool suppress_redundant = 4;
  void clear_suppress_redundant();
  static const int kSuppressRedundantFieldNumber = 4;
  bool suppress_redundant() const;
  void set_suppress_redundant(bool value);

  // optional uint64 heartbeat_interval = 5;
  void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 5;
  ::google::protobuf::uint64 heartbeat_interval() const;
  void set_heartbeat_interval(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gnmi.Subscription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* path_;
  ::google::protobuf::uint64 sample_interval_;
  int mode_;
  bool suppress_redundant_;
  ::google::protobuf::uint64 heartbeat_interval_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Subscription* default_instance_;
};
// -------------------------------------------------------------------

class QOSMarking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.QOSMarking) */ {
 public:
  QOSMarking();
  virtual ~QOSMarking();

  QOSMarking(const QOSMarking& from);

  inline QOSMarking& operator=(const QOSMarking& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QOSMarking& default_instance();

  void Swap(QOSMarking* other);

  // implements Message ----------------------------------------------

  inline QOSMarking* New() const { return New(NULL); }

  QOSMarking* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QOSMarking& from);
  void MergeFrom(const QOSMarking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QOSMarking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 marking = 1;
  void clear_marking();
  static const int kMarkingFieldNumber = 1;
  ::google::protobuf::uint32 marking() const;
  void set_marking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gnmi.QOSMarking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 marking_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static QOSMarking* default_instance_;
};
// -------------------------------------------------------------------

class Alias : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.Alias) */ {
 public:
  Alias();
  virtual ~Alias();

  Alias(const Alias& from);

  inline Alias& operator=(const Alias& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Alias& default_instance();

  void Swap(Alias* other);

  // implements Message ----------------------------------------------

  inline Alias* New() const { return New(NULL); }

  Alias* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Alias& from);
  void MergeFrom(const Alias& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Alias* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Path path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::gnmi::Path& path() const;
  ::gnmi::Path* mutable_path();
  ::gnmi::Path* release_path();
  void set_allocated_path(::gnmi::Path* path);

  // optional string alias = 2;
  void clear_alias();
  static const int kAliasFieldNumber = 2;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // @@protoc_insertion_point(class_scope:gnmi.Alias)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* path_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static Alias* default_instance_;
};
// -------------------------------------------------------------------

class AliasList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.AliasList) */ {
 public:
  AliasList();
  virtual ~AliasList();

  AliasList(const AliasList& from);

  inline AliasList& operator=(const AliasList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AliasList& default_instance();

  void Swap(AliasList* other);

  // implements Message ----------------------------------------------

  inline AliasList* New() const { return New(NULL); }

  AliasList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AliasList& from);
  void MergeFrom(const AliasList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AliasList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gnmi.Alias alias = 1;
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 1;
  const ::gnmi::Alias& alias(int index) const;
  ::gnmi::Alias* mutable_alias(int index);
  ::gnmi::Alias* add_alias();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Alias >*
      mutable_alias();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Alias >&
      alias() const;

  // @@protoc_insertion_point(class_scope:gnmi.AliasList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Alias > alias_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static AliasList* default_instance_;
};
// -------------------------------------------------------------------

class SetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.SetRequest) */ {
 public:
  SetRequest();
  virtual ~SetRequest();

  SetRequest(const SetRequest& from);

  inline SetRequest& operator=(const SetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRequest& default_instance();

  void Swap(SetRequest* other);

  // implements Message ----------------------------------------------

  inline SetRequest* New() const { return New(NULL); }

  SetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetRequest& from);
  void MergeFrom(const SetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Path prefix = 1;
  bool has_prefix() const;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::gnmi::Path& prefix() const;
  ::gnmi::Path* mutable_prefix();
  ::gnmi::Path* release_prefix();
  void set_allocated_prefix(::gnmi::Path* prefix);

  // repeated .gnmi.Path delete = 2;
  int delete__size() const;
  void clear_delete_();
  static const int kDeleteFieldNumber = 2;
  const ::gnmi::Path& delete_(int index) const;
  ::gnmi::Path* mutable_delete_(int index);
  ::gnmi::Path* add_delete_();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
      mutable_delete_();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
      delete_() const;

  // repeated .gnmi.Update replace = 3;
  int replace_size() const;
  void clear_replace();
  static const int kReplaceFieldNumber = 3;
  const ::gnmi::Update& replace(int index) const;
  ::gnmi::Update* mutable_replace(int index);
  ::gnmi::Update* add_replace();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
      mutable_replace();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
      replace() const;

  // repeated .gnmi.Update update = 4;
  int update_size() const;
  void clear_update();
  static const int kUpdateFieldNumber = 4;
  const ::gnmi::Update& update(int index) const;
  ::gnmi::Update* mutable_update(int index);
  ::gnmi::Update* add_update();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
      mutable_update();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
      update() const;

  // @@protoc_insertion_point(class_scope:gnmi.SetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* prefix_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path > delete__;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update > replace_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Update > update_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static SetRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.SetResponse) */ {
 public:
  SetResponse();
  virtual ~SetResponse();

  SetResponse(const SetResponse& from);

  inline SetResponse& operator=(const SetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetResponse& default_instance();

  void Swap(SetResponse* other);

  // implements Message ----------------------------------------------

  inline SetResponse* New() const { return New(NULL); }

  SetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetResponse& from);
  void MergeFrom(const SetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gnmi.Path prefix = 1;
  bool has_prefix() const;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::gnmi::Path& prefix() const;
  ::gnmi::Path* mutable_prefix();
  ::gnmi::Path* release_prefix();
  void set_allocated_prefix(::gnmi::Path* prefix);

  // repeated .gnmi.UpdateResult response = 2;
  int response_size() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::gnmi::UpdateResult& response(int index) const;
  ::gnmi::UpdateResult* mutable_response(int index);
  ::gnmi::UpdateResult* add_response();
  ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >*
      mutable_response();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >&
      response() const;

  // optional .gnmi.Error message = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_message() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMessageFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::gnmi::Error& message() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* mutable_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* release_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_message(::gnmi::Error* message);

  // optional int64 timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gnmi.SetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* prefix_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult > response_;
  ::gnmi::Error* message_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static SetResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.UpdateResult) */ {
 public:
  UpdateResult();
  virtual ~UpdateResult();

  UpdateResult(const UpdateResult& from);

  inline UpdateResult& operator=(const UpdateResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateResult& default_instance();

  void Swap(UpdateResult* other);

  // implements Message ----------------------------------------------

  inline UpdateResult* New() const { return New(NULL); }

  UpdateResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateResult& from);
  void MergeFrom(const UpdateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UpdateResult_Operation Operation;
  static const Operation INVALID =
    UpdateResult_Operation_INVALID;
  static const Operation DELETE =
    UpdateResult_Operation_DELETE;
  static const Operation REPLACE =
    UpdateResult_Operation_REPLACE;
  static const Operation UPDATE =
    UpdateResult_Operation_UPDATE;
  static inline bool Operation_IsValid(int value) {
    return UpdateResult_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    UpdateResult_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    UpdateResult_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    UpdateResult_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return UpdateResult_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return UpdateResult_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return UpdateResult_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 timestamp = 1 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_timestamp();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kTimestampFieldNumber = 1;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int64 timestamp() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_timestamp(::google::protobuf::int64 value);

  // optional .gnmi.Path path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::gnmi::Path& path() const;
  ::gnmi::Path* mutable_path();
  ::gnmi::Path* release_path();
  void set_allocated_path(::gnmi::Path* path);

  // optional .gnmi.Error message = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_message() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMessageFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::gnmi::Error& message() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* mutable_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* release_message();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_message(::gnmi::Error* message);

  // optional .gnmi.UpdateResult.Operation op = 4;
  void clear_op();
  static const int kOpFieldNumber = 4;
  ::gnmi::UpdateResult_Operation op() const;
  void set_op(::gnmi::UpdateResult_Operation value);

  // @@protoc_insertion_point(class_scope:gnmi.UpdateResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 timestamp_;
  ::gnmi::Path* path_;
  ::gnmi::Error* message_;
  int op_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static UpdateResult* default_instance_;
};
// -------------------------------------------------------------------

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  void Swap(GetRequest* other);

  // implements Message ----------------------------------------------

  inline GetRequest* New() const { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetRequest_DataType DataType;
  static const DataType ALL =
    GetRequest_DataType_ALL;
  static const DataType CONFIG =
    GetRequest_DataType_CONFIG;
  static const DataType STATE =
    GetRequest_DataType_STATE;
  static const DataType OPERATIONAL =
    GetRequest_DataType_OPERATIONAL;
  static inline bool DataType_IsValid(int value) {
    return GetRequest_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    GetRequest_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    GetRequest_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    GetRequest_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return GetRequest_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return GetRequest_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return GetRequest_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .gnmi.Path prefix = 1;
  bool has_prefix() const;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::gnmi::Path& prefix() const;
  ::gnmi::Path* mutable_prefix();
  ::gnmi::Path* release_prefix();
  void set_allocated_prefix(::gnmi::Path* prefix);

  // repeated .gnmi.Path path = 2;
  int path_size() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::gnmi::Path& path(int index) const;
  ::gnmi::Path* mutable_path(int index);
  ::gnmi::Path* add_path();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
      mutable_path();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
      path() const;

  // optional .gnmi.GetRequest.DataType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::gnmi::GetRequest_DataType type() const;
  void set_type(::gnmi::GetRequest_DataType value);

  // optional .gnmi.Encoding encoding = 5;
  void clear_encoding();
  static const int kEncodingFieldNumber = 5;
  ::gnmi::Encoding encoding() const;
  void set_encoding(::gnmi::Encoding value);

  // repeated .gnmi.ModelData use_models = 6;
  int use_models_size() const;
  void clear_use_models();
  static const int kUseModelsFieldNumber = 6;
  const ::gnmi::ModelData& use_models(int index) const;
  ::gnmi::ModelData* mutable_use_models(int index);
  ::gnmi::ModelData* add_use_models();
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
      mutable_use_models();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
      use_models() const;

  // @@protoc_insertion_point(class_scope:gnmi.GetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gnmi::Path* prefix_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Path > path_;
  int type_;
  int encoding_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData > use_models_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.GetResponse) */ {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  void Swap(GetResponse* other);

  // implements Message ----------------------------------------------

  inline GetResponse* New() const { return New(NULL); }

  GetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gnmi.Notification notification = 1;
  int notification_size() const;
  void clear_notification();
  static const int kNotificationFieldNumber = 1;
  const ::gnmi::Notification& notification(int index) const;
  ::gnmi::Notification* mutable_notification(int index);
  ::gnmi::Notification* add_notification();
  ::google::protobuf::RepeatedPtrField< ::gnmi::Notification >*
      mutable_notification();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::Notification >&
      notification() const;

  // optional .gnmi.Error error = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_error() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kErrorFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::gnmi::Error& error() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* mutable_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::gnmi::Error* release_error();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_error(::gnmi::Error* error);

  // @@protoc_insertion_point(class_scope:gnmi.GetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::Notification > notification_;
  ::gnmi::Error* error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static GetResponse* default_instance_;
};
// -------------------------------------------------------------------

class CapabilityRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.CapabilityRequest) */ {
 public:
  CapabilityRequest();
  virtual ~CapabilityRequest();

  CapabilityRequest(const CapabilityRequest& from);

  inline CapabilityRequest& operator=(const CapabilityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilityRequest& default_instance();

  void Swap(CapabilityRequest* other);

  // implements Message ----------------------------------------------

  inline CapabilityRequest* New() const { return New(NULL); }

  CapabilityRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CapabilityRequest& from);
  void MergeFrom(const CapabilityRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CapabilityRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gnmi.CapabilityRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static CapabilityRequest* default_instance_;
};
// -------------------------------------------------------------------

class CapabilityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.CapabilityResponse) */ {
 public:
  CapabilityResponse();
  virtual ~CapabilityResponse();

  CapabilityResponse(const CapabilityResponse& from);

  inline CapabilityResponse& operator=(const CapabilityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilityResponse& default_instance();

  void Swap(CapabilityResponse* other);

  // implements Message ----------------------------------------------

  inline CapabilityResponse* New() const { return New(NULL); }

  CapabilityResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CapabilityResponse& from);
  void MergeFrom(const CapabilityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CapabilityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gnmi.ModelData supported_models = 1;
  int supported_models_size() const;
  void clear_supported_models();
  static const int kSupportedModelsFieldNumber = 1;
  const ::gnmi::ModelData& supported_models(int index) const;
  ::gnmi::ModelData* mutable_supported_models(int index);
  ::gnmi::ModelData* add_supported_models();
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
      mutable_supported_models();
  const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
      supported_models() const;

  // repeated .gnmi.Encoding supported_encodings = 2;
  int supported_encodings_size() const;
  void clear_supported_encodings();
  static const int kSupportedEncodingsFieldNumber = 2;
  ::gnmi::Encoding supported_encodings(int index) const;
  void set_supported_encodings(int index, ::gnmi::Encoding value);
  void add_supported_encodings(::gnmi::Encoding value);
  const ::google::protobuf::RepeatedField<int>& supported_encodings() const;
  ::google::protobuf::RepeatedField<int>* mutable_supported_encodings();

  // optional string gNMI_version = 3;
  void clear_gnmi_version();
  static const int kGNMIVersionFieldNumber = 3;
  const ::std::string& gnmi_version() const;
  void set_gnmi_version(const ::std::string& value);
  void set_gnmi_version(const char* value);
  void set_gnmi_version(const char* value, size_t size);
  ::std::string* mutable_gnmi_version();
  ::std::string* release_gnmi_version();
  void set_allocated_gnmi_version(::std::string* gnmi_version);

  // @@protoc_insertion_point(class_scope:gnmi.CapabilityResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData > supported_models_;
  ::google::protobuf::RepeatedField<int> supported_encodings_;
  mutable int _supported_encodings_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr gnmi_version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static CapabilityResponse* default_instance_;
};
// -------------------------------------------------------------------

class ModelData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gnmi.ModelData) */ {
 public:
  ModelData();
  virtual ~ModelData();

  ModelData(const ModelData& from);

  inline ModelData& operator=(const ModelData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelData& default_instance();

  void Swap(ModelData* other);

  // implements Message ----------------------------------------------

  inline ModelData* New() const { return New(NULL); }

  ModelData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelData& from);
  void MergeFrom(const ModelData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string organization = 2;
  void clear_organization();
  static const int kOrganizationFieldNumber = 2;
  const ::std::string& organization() const;
  void set_organization(const ::std::string& value);
  void set_organization(const char* value);
  void set_organization(const char* value, size_t size);
  ::std::string* mutable_organization();
  ::std::string* release_organization();
  void set_allocated_organization(::std::string* organization);

  // optional string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:gnmi.ModelData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr organization_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gnmi_2eproto();
  friend void protobuf_AssignDesc_gnmi_2eproto();
  friend void protobuf_ShutdownFile_gnmi_2eproto();

  void InitAsDefaultInstance();
  static ModelData* default_instance_;
};
// ===================================================================

static const int kGnmiServiceFieldNumber = 1001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  gnmi_service;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Notification

// optional int64 timestamp = 1;
inline void Notification::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.timestamp)
  return timestamp_;
}
inline void Notification::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Notification.timestamp)
}

// optional .gnmi.Path prefix = 2;
inline bool Notification::has_prefix() const {
  return !_is_default_instance_ && prefix_ != NULL;
}
inline void Notification::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
inline const ::gnmi::Path& Notification::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.prefix)
  return prefix_ != NULL ? *prefix_ : *default_instance_->prefix_;
}
inline ::gnmi::Path* Notification::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.prefix)
  return prefix_;
}
inline ::gnmi::Path* Notification::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.Notification.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
inline void Notification::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Notification.prefix)
}

// optional string alias = 3;
inline void Notification::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Notification::alias() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Notification.alias)
}
inline void Notification::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Notification.alias)
}
inline void Notification::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Notification.alias)
}
inline ::std::string* Notification::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_alias() {
  // @@protoc_insertion_point(field_release:gnmi.Notification.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Notification.alias)
}

// repeated .gnmi.Update update = 4;
inline int Notification::update_size() const {
  return update_.size();
}
inline void Notification::clear_update() {
  update_.Clear();
}
inline const ::gnmi::Update& Notification::update(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.update)
  return update_.Get(index);
}
inline ::gnmi::Update* Notification::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.update)
  return update_.Mutable(index);
}
inline ::gnmi::Update* Notification::add_update() {
  // @@protoc_insertion_point(field_add:gnmi.Notification.update)
  return update_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
Notification::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Notification.update)
  return &update_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
Notification::update() const {
  // @@protoc_insertion_point(field_list:gnmi.Notification.update)
  return update_;
}

// repeated .gnmi.Path delete = 5;
inline int Notification::delete__size() const {
  return delete__.size();
}
inline void Notification::clear_delete_() {
  delete__.Clear();
}
inline const ::gnmi::Path& Notification::delete_(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.delete)
  return delete__.Get(index);
}
inline ::gnmi::Path* Notification::mutable_delete_(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.delete)
  return delete__.Mutable(index);
}
inline ::gnmi::Path* Notification::add_delete_() {
  // @@protoc_insertion_point(field_add:gnmi.Notification.delete)
  return delete__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
Notification::mutable_delete_() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Notification.delete)
  return &delete__;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
Notification::delete_() const {
  // @@protoc_insertion_point(field_list:gnmi.Notification.delete)
  return delete__;
}

// -------------------------------------------------------------------

// Update

// optional .gnmi.Path path = 1;
inline bool Update::has_path() const {
  return !_is_default_instance_ && path_ != NULL;
}
inline void Update::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::gnmi::Path& Update::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.path)
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::gnmi::Path* Update::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.path)
  return path_;
}
inline ::gnmi::Path* Update::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Update.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
inline void Update::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.path)
}

// optional .gnmi.Value value = 2 [deprecated = true];
inline bool Update::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
inline void Update::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::gnmi::Value& Update::value() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::gnmi::Value* Update::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::gnmi::Value;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.value)
  return value_;
}
inline ::gnmi::Value* Update::release_value() {
  // @@protoc_insertion_point(field_release:gnmi.Update.value)
  
  ::gnmi::Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Update::set_allocated_value(::gnmi::Value* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.value)
}

// optional .gnmi.TypedValue val = 3;
inline bool Update::has_val() const {
  return !_is_default_instance_ && val_ != NULL;
}
inline void Update::clear_val() {
  if (GetArenaNoVirtual() == NULL && val_ != NULL) delete val_;
  val_ = NULL;
}
inline const ::gnmi::TypedValue& Update::val() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.val)
  return val_ != NULL ? *val_ : *default_instance_->val_;
}
inline ::gnmi::TypedValue* Update::mutable_val() {
  
  if (val_ == NULL) {
    val_ = new ::gnmi::TypedValue;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.val)
  return val_;
}
inline ::gnmi::TypedValue* Update::release_val() {
  // @@protoc_insertion_point(field_release:gnmi.Update.val)
  
  ::gnmi::TypedValue* temp = val_;
  val_ = NULL;
  return temp;
}
inline void Update::set_allocated_val(::gnmi::TypedValue* val) {
  delete val_;
  val_ = val;
  if (val) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.val)
}

// optional uint32 duplicates = 4;
inline void Update::clear_duplicates() {
  duplicates_ = 0u;
}
inline ::google::protobuf::uint32 Update::duplicates() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.duplicates)
  return duplicates_;
}
inline void Update::set_duplicates(::google::protobuf::uint32 value) {
  
  duplicates_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Update.duplicates)
}

// -------------------------------------------------------------------

// TypedValue

// optional string string_val = 1;
inline bool TypedValue::has_string_val() const {
  return value_case() == kStringVal;
}
inline void TypedValue::set_has_string_val() {
  _oneof_case_[0] = kStringVal;
}
inline void TypedValue::clear_string_val() {
  if (has_string_val()) {
    value_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypedValue::string_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.string_val)
  if (has_string_val()) {
    return value_.string_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypedValue::set_string_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.string_val)
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.string_val)
}
inline void TypedValue::set_string_val(const char* value) {
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.string_val)
}
inline void TypedValue::set_string_val(const char* value, size_t size) {
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.string_val)
}
inline ::std::string* TypedValue::mutable_string_val() {
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.string_val)
  return value_.string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedValue::release_string_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.string_val)
  if (has_string_val()) {
    clear_has_value();
    return value_.string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_string_val(::std::string* string_val) {
  if (!has_string_val()) {
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_val != NULL) {
    set_has_string_val();
    value_.string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.string_val)
}

// optional int64 int_val = 2;
inline bool TypedValue::has_int_val() const {
  return value_case() == kIntVal;
}
inline void TypedValue::set_has_int_val() {
  _oneof_case_[0] = kIntVal;
}
inline void TypedValue::clear_int_val() {
  if (has_int_val()) {
    value_.int_val_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 TypedValue::int_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.int_val)
  if (has_int_val()) {
    return value_.int_val_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TypedValue::set_int_val(::google::protobuf::int64 value) {
  if (!has_int_val()) {
    clear_value();
    set_has_int_val();
  }
  value_.int_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.int_val)
}

// optional uint64 uint_val = 3;
inline bool TypedValue::has_uint_val() const {
  return value_case() == kUintVal;
}
inline void TypedValue::set_has_uint_val() {
  _oneof_case_[0] = kUintVal;
}
inline void TypedValue::clear_uint_val() {
  if (has_uint_val()) {
    value_.uint_val_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::uint64 TypedValue::uint_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.uint_val)
  if (has_uint_val()) {
    return value_.uint_val_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void TypedValue::set_uint_val(::google::protobuf::uint64 value) {
  if (!has_uint_val()) {
    clear_value();
    set_has_uint_val();
  }
  value_.uint_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.uint_val)
}

// optional bool bool_val = 4;
inline bool TypedValue::has_bool_val() const {
  return value_case() == kBoolVal;
}
inline void TypedValue::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
inline void TypedValue::clear_bool_val() {
  if (has_bool_val()) {
    value_.bool_val_ = false;
    clear_has_value();
  }
}
inline bool TypedValue::bool_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.bool_val)
  if (has_bool_val()) {
    return value_.bool_val_;
  }
  return false;
}
inline void TypedValue::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_value();
    set_has_bool_val();
  }
  value_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bool_val)
}

// optional bytes bytes_val = 5;
inline bool TypedValue::has_bytes_val() const {
  return value_case() == kBytesVal;
}
inline void TypedValue::set_has_bytes_val() {
  _oneof_case_[0] = kBytesVal;
}
inline void TypedValue::clear_bytes_val() {
  if (has_bytes_val()) {
    value_.bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypedValue::bytes_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.bytes_val)
  if (has_bytes_val()) {
    return value_.bytes_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypedValue::set_bytes_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bytes_val)
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bytes_val)
}
inline void TypedValue::set_bytes_val(const char* value) {
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.bytes_val)
}
inline void TypedValue::set_bytes_val(const void* value, size_t size) {
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.bytes_val)
}
inline ::std::string* TypedValue::mutable_bytes_val() {
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.bytes_val)
  return value_.bytes_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedValue::release_bytes_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.bytes_val)
  if (has_bytes_val()) {
    clear_has_value();
    return value_.bytes_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_bytes_val(::std::string* bytes_val) {
  if (!has_bytes_val()) {
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bytes_val != NULL) {
    set_has_bytes_val();
    value_.bytes_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.bytes_val)
}

// optional float float_val = 6;
inline bool TypedValue::has_float_val() const {
  return value_case() == kFloatVal;
}
inline void TypedValue::set_has_float_val() {
  _oneof_case_[0] = kFloatVal;
}
inline void TypedValue::clear_float_val() {
  if (has_float_val()) {
    value_.float_val_ = 0;
    clear_has_value();
  }
}
inline float TypedValue::float_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.float_val)
  if (has_float_val()) {
    return value_.float_val_;
  }
  return 0;
}
inline void TypedValue::set_float_val(float value) {
  if (!has_float_val()) {
    clear_value();
    set_has_float_val();
  }
  value_.float_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.float_val)
}

// optional .gnmi.Decimal64 decimal_val = 7;
inline bool TypedValue::has_decimal_val() const {
  return value_case() == kDecimalVal;
}
inline void TypedValue::set_has_decimal_val() {
  _oneof_case_[0] = kDecimalVal;
}
inline void TypedValue::clear_decimal_val() {
  if (has_decimal_val()) {
    delete value_.decimal_val_;
    clear_has_value();
  }
}
inline  const ::gnmi::Decimal64& TypedValue::decimal_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.decimal_val)
  return has_decimal_val()
      ? *value_.decimal_val_
      : ::gnmi::Decimal64::default_instance();
}
inline ::gnmi::Decimal64* TypedValue::mutable_decimal_val() {
  if (!has_decimal_val()) {
    clear_value();
    set_has_decimal_val();
    value_.decimal_val_ = new ::gnmi::Decimal64;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.decimal_val)
  return value_.decimal_val_;
}
inline ::gnmi::Decimal64* TypedValue::release_decimal_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.decimal_val)
  if (has_decimal_val()) {
    clear_has_value();
    ::gnmi::Decimal64* temp = value_.decimal_val_;
    value_.decimal_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_decimal_val(::gnmi::Decimal64* decimal_val) {
  clear_value();
  if (decimal_val) {
    set_has_decimal_val();
    value_.decimal_val_ = decimal_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.decimal_val)
}

// optional .gnmi.ScalarArray leaflist_val = 8;
inline bool TypedValue::has_leaflist_val() const {
  return value_case() == kLeaflistVal;
}
inline void TypedValue::set_has_leaflist_val() {
  _oneof_case_[0] = kLeaflistVal;
}
inline void TypedValue::clear_leaflist_val() {
  if (has_leaflist_val()) {
    delete value_.leaflist_val_;
    clear_has_value();
  }
}
inline  const ::gnmi::ScalarArray& TypedValue::leaflist_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.leaflist_val)
  return has_leaflist_val()
      ? *value_.leaflist_val_
      : ::gnmi::ScalarArray::default_instance();
}
inline ::gnmi::ScalarArray* TypedValue::mutable_leaflist_val() {
  if (!has_leaflist_val()) {
    clear_value();
    set_has_leaflist_val();
    value_.leaflist_val_ = new ::gnmi::ScalarArray;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.leaflist_val)
  return value_.leaflist_val_;
}
inline ::gnmi::ScalarArray* TypedValue::release_leaflist_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.leaflist_val)
  if (has_leaflist_val()) {
    clear_has_value();
    ::gnmi::ScalarArray* temp = value_.leaflist_val_;
    value_.leaflist_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_leaflist_val(::gnmi::ScalarArray* leaflist_val) {
  clear_value();
  if (leaflist_val) {
    set_has_leaflist_val();
    value_.leaflist_val_ = leaflist_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.leaflist_val)
}

// optional .google.protobuf.Any any_val = 9;
inline bool TypedValue::has_any_val() const {
  return value_case() == kAnyVal;
}
inline void TypedValue::set_has_any_val() {
  _oneof_case_[0] = kAnyVal;
}
inline void TypedValue::clear_any_val() {
  if (has_any_val()) {
    delete value_.any_val_;
    clear_has_value();
  }
}
inline  const ::google::protobuf::Any& TypedValue::any_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.any_val)
  return has_any_val()
      ? *value_.any_val_
      : ::google::protobuf::Any::default_instance();
}
inline ::google::protobuf::Any* TypedValue::mutable_any_val() {
  if (!has_any_val()) {
    clear_value();
    set_has_any_val();
    value_.any_val_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.any_val)
  return value_.any_val_;
}
inline ::google::protobuf::Any* TypedValue::release_any_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.any_val)
  if (has_any_val()) {
    clear_has_value();
    ::google::protobuf::Any* temp = value_.any_val_;
    value_.any_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_any_val(::google::protobuf::Any* any_val) {
  clear_value();
  if (any_val) {
    set_has_any_val();
    value_.any_val_ = any_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.any_val)
}

// optional bytes json_val = 10;
inline bool TypedValue::has_json_val() const {
  return value_case() == kJsonVal;
}
inline void TypedValue::set_has_json_val() {
  _oneof_case_[0] = kJsonVal;
}
inline void TypedValue::clear_json_val() {
  if (has_json_val()) {
    value_.json_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypedValue::json_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.json_val)
  if (has_json_val()) {
    return value_.json_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypedValue::set_json_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_val)
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_val)
}
inline void TypedValue::set_json_val(const char* value) {
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.json_val)
}
inline void TypedValue::set_json_val(const void* value, size_t size) {
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.json_val)
}
inline ::std::string* TypedValue::mutable_json_val() {
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.json_val)
  return value_.json_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedValue::release_json_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.json_val)
  if (has_json_val()) {
    clear_has_value();
    return value_.json_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_json_val(::std::string* json_val) {
  if (!has_json_val()) {
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (json_val != NULL) {
    set_has_json_val();
    value_.json_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.json_val)
}

// optional bytes json_ietf_val = 11;
inline bool TypedValue::has_json_ietf_val() const {
  return value_case() == kJsonIetfVal;
}
inline void TypedValue::set_has_json_ietf_val() {
  _oneof_case_[0] = kJsonIetfVal;
}
inline void TypedValue::clear_json_ietf_val() {
  if (has_json_ietf_val()) {
    value_.json_ietf_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypedValue::json_ietf_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.json_ietf_val)
  if (has_json_ietf_val()) {
    return value_.json_ietf_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypedValue::set_json_ietf_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_ietf_val)
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_ietf_val)
}
inline void TypedValue::set_json_ietf_val(const char* value) {
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.json_ietf_val)
}
inline void TypedValue::set_json_ietf_val(const void* value, size_t size) {
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.json_ietf_val)
}
inline ::std::string* TypedValue::mutable_json_ietf_val() {
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.json_ietf_val)
  return value_.json_ietf_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedValue::release_json_ietf_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.json_ietf_val)
  if (has_json_ietf_val()) {
    clear_has_value();
    return value_.json_ietf_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_json_ietf_val(::std::string* json_ietf_val) {
  if (!has_json_ietf_val()) {
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (json_ietf_val != NULL) {
    set_has_json_ietf_val();
    value_.json_ietf_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_ietf_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.json_ietf_val)
}

// optional string ascii_val = 12;
inline bool TypedValue::has_ascii_val() const {
  return value_case() == kAsciiVal;
}
inline void TypedValue::set_has_ascii_val() {
  _oneof_case_[0] = kAsciiVal;
}
inline void TypedValue::clear_ascii_val() {
  if (has_ascii_val()) {
    value_.ascii_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypedValue::ascii_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.ascii_val)
  if (has_ascii_val()) {
    return value_.ascii_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypedValue::set_ascii_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.ascii_val)
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.ascii_val)
}
inline void TypedValue::set_ascii_val(const char* value) {
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.ascii_val)
}
inline void TypedValue::set_ascii_val(const char* value, size_t size) {
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.ascii_val)
}
inline ::std::string* TypedValue::mutable_ascii_val() {
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.ascii_val)
  return value_.ascii_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypedValue::release_ascii_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.ascii_val)
  if (has_ascii_val()) {
    clear_has_value();
    return value_.ascii_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypedValue::set_allocated_ascii_val(::std::string* ascii_val) {
  if (!has_ascii_val()) {
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (ascii_val != NULL) {
    set_has_ascii_val();
    value_.ascii_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ascii_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.ascii_val)
}

inline bool TypedValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void TypedValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline TypedValue::ValueCase TypedValue::value_case() const {
  return TypedValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Path

// repeated string element = 1 [deprecated = true];
inline int Path::element_size() const {
  return element_.size();
}
inline void Path::clear_element() {
  element_.Clear();
}
inline const ::std::string& Path::element(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Path.element)
  return element_.Get(index);
}
inline ::std::string* Path::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Path.element)
  return element_.Mutable(index);
}
inline void Path::set_element(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.Path.element)
  element_.Mutable(index)->assign(value);
}
inline void Path::set_element(int index, const char* value) {
  element_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gnmi.Path.element)
}
inline void Path::set_element(int index, const char* value, size_t size) {
  element_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gnmi.Path.element)
}
inline ::std::string* Path::add_element() {
  // @@protoc_insertion_point(field_add_mutable:gnmi.Path.element)
  return element_.Add();
}
inline void Path::add_element(const ::std::string& value) {
  element_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gnmi.Path.element)
}
inline void Path::add_element(const char* value) {
  element_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gnmi.Path.element)
}
inline void Path::add_element(const char* value, size_t size) {
  element_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gnmi.Path.element)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Path::element() const {
  // @@protoc_insertion_point(field_list:gnmi.Path.element)
  return element_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Path::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Path.element)
  return &element_;
}

// optional string origin = 2;
inline void Path::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path::origin() const {
  // @@protoc_insertion_point(field_get:gnmi.Path.origin)
  return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_origin(const ::std::string& value) {
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Path.origin)
}
inline void Path::set_origin(const char* value) {
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Path.origin)
}
inline void Path::set_origin(const char* value, size_t size) {
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Path.origin)
}
inline ::std::string* Path::mutable_origin() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Path.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path::release_origin() {
  // @@protoc_insertion_point(field_release:gnmi.Path.origin)
  
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    
  } else {
    
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Path.origin)
}

// repeated .gnmi.PathElem elem = 3;
inline int Path::elem_size() const {
  return elem_.size();
}
inline void Path::clear_elem() {
  elem_.Clear();
}
inline const ::gnmi::PathElem& Path::elem(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Path.elem)
  return elem_.Get(index);
}
inline ::gnmi::PathElem* Path::mutable_elem(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Path.elem)
  return elem_.Mutable(index);
}
inline ::gnmi::PathElem* Path::add_elem() {
  // @@protoc_insertion_point(field_add:gnmi.Path.elem)
  return elem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::PathElem >*
Path::mutable_elem() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Path.elem)
  return &elem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::PathElem >&
Path::elem() const {
  // @@protoc_insertion_point(field_list:gnmi.Path.elem)
  return elem_;
}

// optional string target = 4;
inline void Path::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path::target() const {
  // @@protoc_insertion_point(field_get:gnmi.Path.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Path.target)
}
inline void Path::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Path.target)
}
inline void Path::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Path.target)
}
inline ::std::string* Path::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Path.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path::release_target() {
  // @@protoc_insertion_point(field_release:gnmi.Path.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Path.target)
}

// -------------------------------------------------------------------

// PathElem

// optional string name = 1;
inline void PathElem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PathElem::name() const {
  // @@protoc_insertion_point(field_get:gnmi.PathElem.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PathElem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.PathElem.name)
}
inline void PathElem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.PathElem.name)
}
inline void PathElem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.PathElem.name)
}
inline ::std::string* PathElem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.PathElem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PathElem::release_name() {
  // @@protoc_insertion_point(field_release:gnmi.PathElem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PathElem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gnmi.PathElem.name)
}

// map<string, string> key = 2;
inline int PathElem::key_size() const {
  return key_.size();
}
inline void PathElem::clear_key() {
  key_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PathElem::key() const {
  // @@protoc_insertion_point(field_map:gnmi.PathElem.key)
  return key_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PathElem::mutable_key() {
  // @@protoc_insertion_point(field_mutable_map:gnmi.PathElem.key)
  return key_.MutableMap();
}

// -------------------------------------------------------------------

// Value

// optional bytes value = 1;
inline void Value::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Value::value() const {
  // @@protoc_insertion_point(field_get:gnmi.Value.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Value.value)
}
inline void Value::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Value.value)
}
inline void Value::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Value.value)
}
inline ::std::string* Value::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Value.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_value() {
  // @@protoc_insertion_point(field_release:gnmi.Value.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Value.value)
}

// optional .gnmi.Encoding type = 2;
inline void Value::clear_type() {
  type_ = 0;
}
inline ::gnmi::Encoding Value::type() const {
  // @@protoc_insertion_point(field_get:gnmi.Value.type)
  return static_cast< ::gnmi::Encoding >(type_);
}
inline void Value::set_type(::gnmi::Encoding value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Value.type)
}

// -------------------------------------------------------------------

// Error

// optional uint32 code = 1;
inline void Error::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 Error::code() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.code)
  return code_;
}
inline void Error::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Error.code)
}

// optional string message = 2;
inline void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Error.message)
}
inline void Error::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Error.message)
}
inline void Error::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Error.message)
}
inline ::std::string* Error::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.Error.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Error.message)
}

// optional .google.protobuf.Any data = 3;
inline bool Error::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
inline void Error::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& Error::data() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::google::protobuf::Any* Error::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Error.data)
  return data_;
}
inline ::google::protobuf::Any* Error::release_data() {
  // @@protoc_insertion_point(field_release:gnmi.Error.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Error::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Error.data)
}

// -------------------------------------------------------------------

// Decimal64

// optional int64 digits = 1;
inline void Decimal64::clear_digits() {
  digits_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Decimal64::digits() const {
  // @@protoc_insertion_point(field_get:gnmi.Decimal64.digits)
  return digits_;
}
inline void Decimal64::set_digits(::google::protobuf::int64 value) {
  
  digits_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Decimal64.digits)
}

// optional uint32 precision = 2;
inline void Decimal64::clear_precision() {
  precision_ = 0u;
}
inline ::google::protobuf::uint32 Decimal64::precision() const {
  // @@protoc_insertion_point(field_get:gnmi.Decimal64.precision)
  return precision_;
}
inline void Decimal64::set_precision(::google::protobuf::uint32 value) {
  
  precision_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Decimal64.precision)
}

// -------------------------------------------------------------------

// ScalarArray

// repeated .gnmi.TypedValue element = 1;
inline int ScalarArray::element_size() const {
  return element_.size();
}
inline void ScalarArray::clear_element() {
  element_.Clear();
}
inline const ::gnmi::TypedValue& ScalarArray::element(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.ScalarArray.element)
  return element_.Get(index);
}
inline ::gnmi::TypedValue* ScalarArray::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.ScalarArray.element)
  return element_.Mutable(index);
}
inline ::gnmi::TypedValue* ScalarArray::add_element() {
  // @@protoc_insertion_point(field_add:gnmi.ScalarArray.element)
  return element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >*
ScalarArray::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.ScalarArray.element)
  return &element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >&
ScalarArray::element() const {
  // @@protoc_insertion_point(field_list:gnmi.ScalarArray.element)
  return element_;
}

// -------------------------------------------------------------------

// SubscribeRequest

// optional .gnmi.SubscriptionList subscribe = 1;
inline bool SubscribeRequest::has_subscribe() const {
  return request_case() == kSubscribe;
}
inline void SubscribeRequest::set_has_subscribe() {
  _oneof_case_[0] = kSubscribe;
}
inline void SubscribeRequest::clear_subscribe() {
  if (has_subscribe()) {
    delete request_.subscribe_;
    clear_has_request();
  }
}
inline  const ::gnmi::SubscriptionList& SubscribeRequest::subscribe() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.subscribe)
  return has_subscribe()
      ? *request_.subscribe_
      : ::gnmi::SubscriptionList::default_instance();
}
inline ::gnmi::SubscriptionList* SubscribeRequest::mutable_subscribe() {
  if (!has_subscribe()) {
    clear_request();
    set_has_subscribe();
    request_.subscribe_ = new ::gnmi::SubscriptionList;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.subscribe)
  return request_.subscribe_;
}
inline ::gnmi::SubscriptionList* SubscribeRequest::release_subscribe() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.subscribe)
  if (has_subscribe()) {
    clear_has_request();
    ::gnmi::SubscriptionList* temp = request_.subscribe_;
    request_.subscribe_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SubscribeRequest::set_allocated_subscribe(::gnmi::SubscriptionList* subscribe) {
  clear_request();
  if (subscribe) {
    set_has_subscribe();
    request_.subscribe_ = subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.subscribe)
}

// optional .gnmi.Poll poll = 3;
inline bool SubscribeRequest::has_poll() const {
  return request_case() == kPoll;
}
inline void SubscribeRequest::set_has_poll() {
  _oneof_case_[0] = kPoll;
}
inline void SubscribeRequest::clear_poll() {
  if (has_poll()) {
    delete request_.poll_;
    clear_has_request();
  }
}
inline  const ::gnmi::Poll& SubscribeRequest::poll() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.poll)
  return has_poll()
      ? *request_.poll_
      : ::gnmi::Poll::default_instance();
}
inline ::gnmi::Poll* SubscribeRequest::mutable_poll() {
  if (!has_poll()) {
    clear_request();
    set_has_poll();
    request_.poll_ = new ::gnmi::Poll;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.poll)
  return request_.poll_;
}
inline ::gnmi::Poll* SubscribeRequest::release_poll() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.poll)
  if (has_poll()) {
    clear_has_request();
    ::gnmi::Poll* temp = request_.poll_;
    request_.poll_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SubscribeRequest::set_allocated_poll(::gnmi::Poll* poll) {
  clear_request();
  if (poll) {
    set_has_poll();
    request_.poll_ = poll;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.poll)
}

// optional .gnmi.AliasList aliases = 4;
inline bool SubscribeRequest::has_aliases() const {
  return request_case() == kAliases;
}
inline void SubscribeRequest::set_has_aliases() {
  _oneof_case_[0] = kAliases;
}
inline void SubscribeRequest::clear_aliases() {
  if (has_aliases()) {
    delete request_.aliases_;
    clear_has_request();
  }
}
inline  const ::gnmi::AliasList& SubscribeRequest::aliases() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.aliases)
  return has_aliases()
      ? *request_.aliases_
      : ::gnmi::AliasList::default_instance();
}
inline ::gnmi::AliasList* SubscribeRequest::mutable_aliases() {
  if (!has_aliases()) {
    clear_request();
    set_has_aliases();
    request_.aliases_ = new ::gnmi::AliasList;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.aliases)
  return request_.aliases_;
}
inline ::gnmi::AliasList* SubscribeRequest::release_aliases() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.aliases)
  if (has_aliases()) {
    clear_has_request();
    ::gnmi::AliasList* temp = request_.aliases_;
    request_.aliases_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SubscribeRequest::set_allocated_aliases(::gnmi::AliasList* aliases) {
  clear_request();
  if (aliases) {
    set_has_aliases();
    request_.aliases_ = aliases;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.aliases)
}

inline bool SubscribeRequest::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void SubscribeRequest::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline SubscribeRequest::RequestCase SubscribeRequest::request_case() const {
  return SubscribeRequest::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Poll

// -------------------------------------------------------------------

// SubscribeResponse

// optional .gnmi.Notification update = 1;
inline bool SubscribeResponse::has_update() const {
  return response_case() == kUpdate;
}
inline void SubscribeResponse::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
inline void SubscribeResponse::clear_update() {
  if (has_update()) {
    delete response_.update_;
    clear_has_response();
  }
}
inline  const ::gnmi::Notification& SubscribeResponse::update() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.update)
  return has_update()
      ? *response_.update_
      : ::gnmi::Notification::default_instance();
}
inline ::gnmi::Notification* SubscribeResponse::mutable_update() {
  if (!has_update()) {
    clear_response();
    set_has_update();
    response_.update_ = new ::gnmi::Notification;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeResponse.update)
  return response_.update_;
}
inline ::gnmi::Notification* SubscribeResponse::release_update() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeResponse.update)
  if (has_update()) {
    clear_has_response();
    ::gnmi::Notification* temp = response_.update_;
    response_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SubscribeResponse::set_allocated_update(::gnmi::Notification* update) {
  clear_response();
  if (update) {
    set_has_update();
    response_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.update)
}

// optional bool sync_response = 3;
inline bool SubscribeResponse::has_sync_response() const {
  return response_case() == kSyncResponse;
}
inline void SubscribeResponse::set_has_sync_response() {
  _oneof_case_[0] = kSyncResponse;
}
inline void SubscribeResponse::clear_sync_response() {
  if (has_sync_response()) {
    response_.sync_response_ = false;
    clear_has_response();
  }
}
inline bool SubscribeResponse::sync_response() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.sync_response)
  if (has_sync_response()) {
    return response_.sync_response_;
  }
  return false;
}
inline void SubscribeResponse::set_sync_response(bool value) {
  if (!has_sync_response()) {
    clear_response();
    set_has_sync_response();
  }
  response_.sync_response_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscribeResponse.sync_response)
}

// optional .gnmi.Error error = 4 [deprecated = true];
inline bool SubscribeResponse::has_error() const {
  return response_case() == kError;
}
inline void SubscribeResponse::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void SubscribeResponse::clear_error() {
  if (has_error()) {
    delete response_.error_;
    clear_has_response();
  }
}
inline  const ::gnmi::Error& SubscribeResponse::error() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.error)
  return has_error()
      ? *response_.error_
      : ::gnmi::Error::default_instance();
}
inline ::gnmi::Error* SubscribeResponse::mutable_error() {
  if (!has_error()) {
    clear_response();
    set_has_error();
    response_.error_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeResponse.error)
  return response_.error_;
}
inline ::gnmi::Error* SubscribeResponse::release_error() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeResponse.error)
  if (has_error()) {
    clear_has_response();
    ::gnmi::Error* temp = response_.error_;
    response_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SubscribeResponse::set_allocated_error(::gnmi::Error* error) {
  clear_response();
  if (error) {
    set_has_error();
    response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.error)
}

inline bool SubscribeResponse::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void SubscribeResponse::clear_has_response() {
  _oneof_case_[0] = RESPONSE_NOT_SET;
}
inline SubscribeResponse::ResponseCase SubscribeResponse::response_case() const {
  return SubscribeResponse::ResponseCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SubscriptionList

// optional .gnmi.Path prefix = 1;
inline bool SubscriptionList::has_prefix() const {
  return !_is_default_instance_ && prefix_ != NULL;
}
inline void SubscriptionList::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
inline const ::gnmi::Path& SubscriptionList::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.prefix)
  return prefix_ != NULL ? *prefix_ : *default_instance_->prefix_;
}
inline ::gnmi::Path* SubscriptionList::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.prefix)
  return prefix_;
}
inline ::gnmi::Path* SubscriptionList::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SubscriptionList.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
inline void SubscriptionList::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscriptionList.prefix)
}

// repeated .gnmi.Subscription subscription = 2;
inline int SubscriptionList::subscription_size() const {
  return subscription_.size();
}
inline void SubscriptionList::clear_subscription() {
  subscription_.Clear();
}
inline const ::gnmi::Subscription& SubscriptionList::subscription(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.subscription)
  return subscription_.Get(index);
}
inline ::gnmi::Subscription* SubscriptionList::mutable_subscription(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.subscription)
  return subscription_.Mutable(index);
}
inline ::gnmi::Subscription* SubscriptionList::add_subscription() {
  // @@protoc_insertion_point(field_add:gnmi.SubscriptionList.subscription)
  return subscription_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >*
SubscriptionList::mutable_subscription() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SubscriptionList.subscription)
  return &subscription_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >&
SubscriptionList::subscription() const {
  // @@protoc_insertion_point(field_list:gnmi.SubscriptionList.subscription)
  return subscription_;
}

// optional bool use_aliases = 3;
inline void SubscriptionList::clear_use_aliases() {
  use_aliases_ = false;
}
inline bool SubscriptionList::use_aliases() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.use_aliases)
  return use_aliases_;
}
inline void SubscriptionList::set_use_aliases(bool value) {
  
  use_aliases_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.use_aliases)
}

// optional .gnmi.QOSMarking qos = 4;
inline bool SubscriptionList::has_qos() const {
  return !_is_default_instance_ && qos_ != NULL;
}
inline void SubscriptionList::clear_qos() {
  if (GetArenaNoVirtual() == NULL && qos_ != NULL) delete qos_;
  qos_ = NULL;
}
inline const ::gnmi::QOSMarking& SubscriptionList::qos() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.qos)
  return qos_ != NULL ? *qos_ : *default_instance_->qos_;
}
inline ::gnmi::QOSMarking* SubscriptionList::mutable_qos() {
  
  if (qos_ == NULL) {
    qos_ = new ::gnmi::QOSMarking;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.qos)
  return qos_;
}
inline ::gnmi::QOSMarking* SubscriptionList::release_qos() {
  // @@protoc_insertion_point(field_release:gnmi.SubscriptionList.qos)
  
  ::gnmi::QOSMarking* temp = qos_;
  qos_ = NULL;
  return temp;
}
inline void SubscriptionList::set_allocated_qos(::gnmi::QOSMarking* qos) {
  delete qos_;
  qos_ = qos;
  if (qos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscriptionList.qos)
}

// optional .gnmi.SubscriptionList.Mode mode = 5;
inline void SubscriptionList::clear_mode() {
  mode_ = 0;
}
inline ::gnmi::SubscriptionList_Mode SubscriptionList::mode() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.mode)
  return static_cast< ::gnmi::SubscriptionList_Mode >(mode_);
}
inline void SubscriptionList::set_mode(::gnmi::SubscriptionList_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.mode)
}

// optional bool allow_aggregation = 6;
inline void SubscriptionList::clear_allow_aggregation() {
  allow_aggregation_ = false;
}
inline bool SubscriptionList::allow_aggregation() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.allow_aggregation)
  return allow_aggregation_;
}
inline void SubscriptionList::set_allow_aggregation(bool value) {
  
  allow_aggregation_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.allow_aggregation)
}

// repeated .gnmi.ModelData use_models = 7;
inline int SubscriptionList::use_models_size() const {
  return use_models_.size();
}
inline void SubscriptionList::clear_use_models() {
  use_models_.Clear();
}
inline const ::gnmi::ModelData& SubscriptionList::use_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.use_models)
  return use_models_.Get(index);
}
inline ::gnmi::ModelData* SubscriptionList::mutable_use_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.use_models)
  return use_models_.Mutable(index);
}
inline ::gnmi::ModelData* SubscriptionList::add_use_models() {
  // @@protoc_insertion_point(field_add:gnmi.SubscriptionList.use_models)
  return use_models_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
SubscriptionList::mutable_use_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SubscriptionList.use_models)
  return &use_models_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
SubscriptionList::use_models() const {
  // @@protoc_insertion_point(field_list:gnmi.SubscriptionList.use_models)
  return use_models_;
}

// optional .gnmi.Encoding encoding = 8;
inline void SubscriptionList::clear_encoding() {
  encoding_ = 0;
}
inline ::gnmi::Encoding SubscriptionList::encoding() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.encoding)
  return static_cast< ::gnmi::Encoding >(encoding_);
}
inline void SubscriptionList::set_encoding(::gnmi::Encoding value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.encoding)
}

// optional bool updates_only = 9;
inline void SubscriptionList::clear_updates_only() {
  updates_only_ = false;
}
inline bool SubscriptionList::updates_only() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.updates_only)
  return updates_only_;
}
inline void SubscriptionList::set_updates_only(bool value) {
  
  updates_only_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.updates_only)
}

// -------------------------------------------------------------------

// Subscription

// optional .gnmi.Path path = 1;
inline bool Subscription::has_path() const {
  return !_is_default_instance_ && path_ != NULL;
}
inline void Subscription::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::gnmi::Path& Subscription::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.path)
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::gnmi::Path* Subscription::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Subscription.path)
  return path_;
}
inline ::gnmi::Path* Subscription::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Subscription.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
inline void Subscription::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Subscription.path)
}

// optional .gnmi.SubscriptionMode mode = 2;
inline void Subscription::clear_mode() {
  mode_ = 0;
}
inline ::gnmi::SubscriptionMode Subscription::mode() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.mode)
  return static_cast< ::gnmi::SubscriptionMode >(mode_);
}
inline void Subscription::set_mode(::gnmi::SubscriptionMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.mode)
}

// optional uint64 sample_interval = 3;
inline void Subscription::clear_sample_interval() {
  sample_interval_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Subscription::sample_interval() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.sample_interval)
  return sample_interval_;
}
inline void Subscription::set_sample_interval(::google::protobuf::uint64 value) {
  
  sample_interval_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.sample_interval)
}

// optional bool suppress_redundant = 4;
inline void Subscription::clear_suppress_redundant() {
  suppress_redundant_ = false;
}
inline bool Subscription::suppress_redundant() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.suppress_redundant)
  return suppress_redundant_;
}
inline void Subscription::set_suppress_redundant(bool value) {
  
  suppress_redundant_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.suppress_redundant)
}

// optional uint64 heartbeat_interval = 5;
inline void Subscription::clear_heartbeat_interval() {
  heartbeat_interval_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Subscription::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.heartbeat_interval)
  return heartbeat_interval_;
}
inline void Subscription::set_heartbeat_interval(::google::protobuf::uint64 value) {
  
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.heartbeat_interval)
}

// -------------------------------------------------------------------

// QOSMarking

// optional uint32 marking = 1;
inline void QOSMarking::clear_marking() {
  marking_ = 0u;
}
inline ::google::protobuf::uint32 QOSMarking::marking() const {
  // @@protoc_insertion_point(field_get:gnmi.QOSMarking.marking)
  return marking_;
}
inline void QOSMarking::set_marking(::google::protobuf::uint32 value) {
  
  marking_ = value;
  // @@protoc_insertion_point(field_set:gnmi.QOSMarking.marking)
}

// -------------------------------------------------------------------

// Alias

// optional .gnmi.Path path = 1;
inline bool Alias::has_path() const {
  return !_is_default_instance_ && path_ != NULL;
}
inline void Alias::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::gnmi::Path& Alias::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Alias.path)
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::gnmi::Path* Alias::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Alias.path)
  return path_;
}
inline ::gnmi::Path* Alias::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Alias.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
inline void Alias::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Alias.path)
}

// optional string alias = 2;
inline void Alias::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alias::alias() const {
  // @@protoc_insertion_point(field_get:gnmi.Alias.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alias::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Alias.alias)
}
inline void Alias::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Alias.alias)
}
inline void Alias::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Alias.alias)
}
inline ::std::string* Alias::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Alias.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alias::release_alias() {
  // @@protoc_insertion_point(field_release:gnmi.Alias.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alias::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Alias.alias)
}

// -------------------------------------------------------------------

// AliasList

// repeated .gnmi.Alias alias = 1;
inline int AliasList::alias_size() const {
  return alias_.size();
}
inline void AliasList::clear_alias() {
  alias_.Clear();
}
inline const ::gnmi::Alias& AliasList::alias(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.AliasList.alias)
  return alias_.Get(index);
}
inline ::gnmi::Alias* AliasList::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.AliasList.alias)
  return alias_.Mutable(index);
}
inline ::gnmi::Alias* AliasList::add_alias() {
  // @@protoc_insertion_point(field_add:gnmi.AliasList.alias)
  return alias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Alias >*
AliasList::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.AliasList.alias)
  return &alias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Alias >&
AliasList::alias() const {
  // @@protoc_insertion_point(field_list:gnmi.AliasList.alias)
  return alias_;
}

// -------------------------------------------------------------------

// SetRequest

// optional .gnmi.Path prefix = 1;
inline bool SetRequest::has_prefix() const {
  return !_is_default_instance_ && prefix_ != NULL;
}
inline void SetRequest::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
inline const ::gnmi::Path& SetRequest::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.prefix)
  return prefix_ != NULL ? *prefix_ : *default_instance_->prefix_;
}
inline ::gnmi::Path* SetRequest::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.prefix)
  return prefix_;
}
inline ::gnmi::Path* SetRequest::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SetRequest.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
inline void SetRequest::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetRequest.prefix)
}

// repeated .gnmi.Path delete = 2;
inline int SetRequest::delete__size() const {
  return delete__.size();
}
inline void SetRequest::clear_delete_() {
  delete__.Clear();
}
inline const ::gnmi::Path& SetRequest::delete_(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.delete)
  return delete__.Get(index);
}
inline ::gnmi::Path* SetRequest::mutable_delete_(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.delete)
  return delete__.Mutable(index);
}
inline ::gnmi::Path* SetRequest::add_delete_() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.delete)
  return delete__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
SetRequest::mutable_delete_() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.delete)
  return &delete__;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
SetRequest::delete_() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.delete)
  return delete__;
}

// repeated .gnmi.Update replace = 3;
inline int SetRequest::replace_size() const {
  return replace_.size();
}
inline void SetRequest::clear_replace() {
  replace_.Clear();
}
inline const ::gnmi::Update& SetRequest::replace(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.replace)
  return replace_.Get(index);
}
inline ::gnmi::Update* SetRequest::mutable_replace(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.replace)
  return replace_.Mutable(index);
}
inline ::gnmi::Update* SetRequest::add_replace() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.replace)
  return replace_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
SetRequest::mutable_replace() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.replace)
  return &replace_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
SetRequest::replace() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.replace)
  return replace_;
}

// repeated .gnmi.Update update = 4;
inline int SetRequest::update_size() const {
  return update_.size();
}
inline void SetRequest::clear_update() {
  update_.Clear();
}
inline const ::gnmi::Update& SetRequest::update(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.update)
  return update_.Get(index);
}
inline ::gnmi::Update* SetRequest::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.update)
  return update_.Mutable(index);
}
inline ::gnmi::Update* SetRequest::add_update() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.update)
  return update_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
SetRequest::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.update)
  return &update_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
SetRequest::update() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.update)
  return update_;
}

// -------------------------------------------------------------------

// SetResponse

// optional .gnmi.Path prefix = 1;
inline bool SetResponse::has_prefix() const {
  return !_is_default_instance_ && prefix_ != NULL;
}
inline void SetResponse::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
inline const ::gnmi::Path& SetResponse::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.prefix)
  return prefix_ != NULL ? *prefix_ : *default_instance_->prefix_;
}
inline ::gnmi::Path* SetResponse::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.prefix)
  return prefix_;
}
inline ::gnmi::Path* SetResponse::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SetResponse.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
inline void SetResponse::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetResponse.prefix)
}

// repeated .gnmi.UpdateResult response = 2;
inline int SetResponse::response_size() const {
  return response_.size();
}
inline void SetResponse::clear_response() {
  response_.Clear();
}
inline const ::gnmi::UpdateResult& SetResponse::response(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.response)
  return response_.Get(index);
}
inline ::gnmi::UpdateResult* SetResponse::mutable_response(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.response)
  return response_.Mutable(index);
}
inline ::gnmi::UpdateResult* SetResponse::add_response() {
  // @@protoc_insertion_point(field_add:gnmi.SetResponse.response)
  return response_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >*
SetResponse::mutable_response() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetResponse.response)
  return &response_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >&
SetResponse::response() const {
  // @@protoc_insertion_point(field_list:gnmi.SetResponse.response)
  return response_;
}

// optional .gnmi.Error message = 3 [deprecated = true];
inline bool SetResponse::has_message() const {
  return !_is_default_instance_ && message_ != NULL;
}
inline void SetResponse::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
inline const ::gnmi::Error& SetResponse::message() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::gnmi::Error* SetResponse::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.message)
  return message_;
}
inline ::gnmi::Error* SetResponse::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.SetResponse.message)
  
  ::gnmi::Error* temp = message_;
  message_ = NULL;
  return temp;
}
inline void SetResponse::set_allocated_message(::gnmi::Error* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetResponse.message)
}

// optional int64 timestamp = 4;
inline void SetResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SetResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.timestamp)
  return timestamp_;
}
inline void SetResponse::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SetResponse.timestamp)
}

// -------------------------------------------------------------------

// UpdateResult

// optional int64 timestamp = 1 [deprecated = true];
inline void UpdateResult::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UpdateResult::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.timestamp)
  return timestamp_;
}
inline void UpdateResult::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.UpdateResult.timestamp)
}

// optional .gnmi.Path path = 2;
inline bool UpdateResult::has_path() const {
  return !_is_default_instance_ && path_ != NULL;
}
inline void UpdateResult::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::gnmi::Path& UpdateResult::path() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.path)
  return path_ != NULL ? *path_ : *default_instance_->path_;
}
inline ::gnmi::Path* UpdateResult::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.UpdateResult.path)
  return path_;
}
inline ::gnmi::Path* UpdateResult::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.UpdateResult.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
inline void UpdateResult::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.UpdateResult.path)
}

// optional .gnmi.Error message = 3 [deprecated = true];
inline bool UpdateResult::has_message() const {
  return !_is_default_instance_ && message_ != NULL;
}
inline void UpdateResult::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
inline const ::gnmi::Error& UpdateResult::message() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::gnmi::Error* UpdateResult::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.UpdateResult.message)
  return message_;
}
inline ::gnmi::Error* UpdateResult::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.UpdateResult.message)
  
  ::gnmi::Error* temp = message_;
  message_ = NULL;
  return temp;
}
inline void UpdateResult::set_allocated_message(::gnmi::Error* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.UpdateResult.message)
}

// optional .gnmi.UpdateResult.Operation op = 4;
inline void UpdateResult::clear_op() {
  op_ = 0;
}
inline ::gnmi::UpdateResult_Operation UpdateResult::op() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.op)
  return static_cast< ::gnmi::UpdateResult_Operation >(op_);
}
inline void UpdateResult::set_op(::gnmi::UpdateResult_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:gnmi.UpdateResult.op)
}

// -------------------------------------------------------------------

// GetRequest

// optional .gnmi.Path prefix = 1;
inline bool GetRequest::has_prefix() const {
  return !_is_default_instance_ && prefix_ != NULL;
}
inline void GetRequest::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
inline const ::gnmi::Path& GetRequest::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.prefix)
  return prefix_ != NULL ? *prefix_ : *default_instance_->prefix_;
}
inline ::gnmi::Path* GetRequest::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.prefix)
  return prefix_;
}
inline ::gnmi::Path* GetRequest::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.GetRequest.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
inline void GetRequest::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.GetRequest.prefix)
}

// repeated .gnmi.Path path = 2;
inline int GetRequest::path_size() const {
  return path_.size();
}
inline void GetRequest::clear_path() {
  path_.Clear();
}
inline const ::gnmi::Path& GetRequest::path(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.path)
  return path_.Get(index);
}
inline ::gnmi::Path* GetRequest::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.path)
  return path_.Mutable(index);
}
inline ::gnmi::Path* GetRequest::add_path() {
  // @@protoc_insertion_point(field_add:gnmi.GetRequest.path)
  return path_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
GetRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetRequest.path)
  return &path_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
GetRequest::path() const {
  // @@protoc_insertion_point(field_list:gnmi.GetRequest.path)
  return path_;
}

// optional .gnmi.GetRequest.DataType type = 3;
inline void GetRequest::clear_type() {
  type_ = 0;
}
inline ::gnmi::GetRequest_DataType GetRequest::type() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.type)
  return static_cast< ::gnmi::GetRequest_DataType >(type_);
}
inline void GetRequest::set_type(::gnmi::GetRequest_DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gnmi.GetRequest.type)
}

// optional .gnmi.Encoding encoding = 5;
inline void GetRequest::clear_encoding() {
  encoding_ = 0;
}
inline ::gnmi::Encoding GetRequest::encoding() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.encoding)
  return static_cast< ::gnmi::Encoding >(encoding_);
}
inline void GetRequest::set_encoding(::gnmi::Encoding value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:gnmi.GetRequest.encoding)
}

// repeated .gnmi.ModelData use_models = 6;
inline int GetRequest::use_models_size() const {
  return use_models_.size();
}
inline void GetRequest::clear_use_models() {
  use_models_.Clear();
}
inline const ::gnmi::ModelData& GetRequest::use_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.use_models)
  return use_models_.Get(index);
}
inline ::gnmi::ModelData* GetRequest::mutable_use_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.use_models)
  return use_models_.Mutable(index);
}
inline ::gnmi::ModelData* GetRequest::add_use_models() {
  // @@protoc_insertion_point(field_add:gnmi.GetRequest.use_models)
  return use_models_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
GetRequest::mutable_use_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetRequest.use_models)
  return &use_models_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
GetRequest::use_models() const {
  // @@protoc_insertion_point(field_list:gnmi.GetRequest.use_models)
  return use_models_;
}

// -------------------------------------------------------------------

// GetResponse

// repeated .gnmi.Notification notification = 1;
inline int GetResponse::notification_size() const {
  return notification_.size();
}
inline void GetResponse::clear_notification() {
  notification_.Clear();
}
inline const ::gnmi::Notification& GetResponse::notification(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetResponse.notification)
  return notification_.Get(index);
}
inline ::gnmi::Notification* GetResponse::mutable_notification(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetResponse.notification)
  return notification_.Mutable(index);
}
inline ::gnmi::Notification* GetResponse::add_notification() {
  // @@protoc_insertion_point(field_add:gnmi.GetResponse.notification)
  return notification_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::Notification >*
GetResponse::mutable_notification() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetResponse.notification)
  return &notification_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::Notification >&
GetResponse::notification() const {
  // @@protoc_insertion_point(field_list:gnmi.GetResponse.notification)
  return notification_;
}

// optional .gnmi.Error error = 2 [deprecated = true];
inline bool GetResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::gnmi::Error& GetResponse::error() const {
  // @@protoc_insertion_point(field_get:gnmi.GetResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::gnmi::Error* GetResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.GetResponse.error)
  return error_;
}
inline ::gnmi::Error* GetResponse::release_error() {
  // @@protoc_insertion_point(field_release:gnmi.GetResponse.error)
  
  ::gnmi::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetResponse::set_allocated_error(::gnmi::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.GetResponse.error)
}

// -------------------------------------------------------------------

// CapabilityRequest

// -------------------------------------------------------------------

// CapabilityResponse

// repeated .gnmi.ModelData supported_models = 1;
inline int CapabilityResponse::supported_models_size() const {
  return supported_models_.size();
}
inline void CapabilityResponse::clear_supported_models() {
  supported_models_.Clear();
}
inline const ::gnmi::ModelData& CapabilityResponse::supported_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Get(index);
}
inline ::gnmi::ModelData* CapabilityResponse::mutable_supported_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Mutable(index);
}
inline ::gnmi::ModelData* CapabilityResponse::add_supported_models() {
  // @@protoc_insertion_point(field_add:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
CapabilityResponse::mutable_supported_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.CapabilityResponse.supported_models)
  return &supported_models_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
CapabilityResponse::supported_models() const {
  // @@protoc_insertion_point(field_list:gnmi.CapabilityResponse.supported_models)
  return supported_models_;
}

// repeated .gnmi.Encoding supported_encodings = 2;
inline int CapabilityResponse::supported_encodings_size() const {
  return supported_encodings_.size();
}
inline void CapabilityResponse::clear_supported_encodings() {
  supported_encodings_.Clear();
}
inline ::gnmi::Encoding CapabilityResponse::supported_encodings(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.supported_encodings)
  return static_cast< ::gnmi::Encoding >(supported_encodings_.Get(index));
}
inline void CapabilityResponse::set_supported_encodings(int index, ::gnmi::Encoding value) {
  supported_encodings_.Set(index, value);
  // @@protoc_insertion_point(field_set:gnmi.CapabilityResponse.supported_encodings)
}
inline void CapabilityResponse::add_supported_encodings(::gnmi::Encoding value) {
  supported_encodings_.Add(value);
  // @@protoc_insertion_point(field_add:gnmi.CapabilityResponse.supported_encodings)
}
inline const ::google::protobuf::RepeatedField<int>&
CapabilityResponse::supported_encodings() const {
  // @@protoc_insertion_point(field_list:gnmi.CapabilityResponse.supported_encodings)
  return supported_encodings_;
}
inline ::google::protobuf::RepeatedField<int>*
CapabilityResponse::mutable_supported_encodings() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.CapabilityResponse.supported_encodings)
  return &supported_encodings_;
}

// optional string gNMI_version = 3;
inline void CapabilityResponse::clear_gnmi_version() {
  gnmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapabilityResponse::gnmi_version() const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.gNMI_version)
  return gnmi_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapabilityResponse::set_gnmi_version(const ::std::string& value) {
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.CapabilityResponse.gNMI_version)
}
inline void CapabilityResponse::set_gnmi_version(const char* value) {
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.CapabilityResponse.gNMI_version)
}
inline void CapabilityResponse::set_gnmi_version(const char* value, size_t size) {
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.CapabilityResponse.gNMI_version)
}
inline ::std::string* CapabilityResponse::mutable_gnmi_version() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.CapabilityResponse.gNMI_version)
  return gnmi_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapabilityResponse::release_gnmi_version() {
  // @@protoc_insertion_point(field_release:gnmi.CapabilityResponse.gNMI_version)
  
  return gnmi_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapabilityResponse::set_allocated_gnmi_version(::std::string* gnmi_version) {
  if (gnmi_version != NULL) {
    
  } else {
    
  }
  gnmi_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gnmi_version);
  // @@protoc_insertion_point(field_set_allocated:gnmi.CapabilityResponse.gNMI_version)
}

// -------------------------------------------------------------------

// ModelData

// optional string name = 1;
inline void ModelData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelData::name() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.name)
}
inline void ModelData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.name)
}
inline void ModelData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.name)
}
inline ::std::string* ModelData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelData::release_name() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.name)
}

// optional string organization = 2;
inline void ModelData::clear_organization() {
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelData::organization() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.organization)
  return organization_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_organization(const ::std::string& value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.organization)
}
inline void ModelData::set_organization(const char* value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.organization)
}
inline void ModelData::set_organization(const char* value, size_t size) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.organization)
}
inline ::std::string* ModelData::mutable_organization() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.organization)
  return organization_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelData::release_organization() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.organization)
  
  return organization_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_allocated_organization(::std::string* organization) {
  if (organization != NULL) {
    
  } else {
    
  }
  organization_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organization);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.organization)
}

// optional string version = 3;
inline void ModelData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelData::version() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.version)
}
inline void ModelData::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.version)
}
inline void ModelData::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.version)
}
inline ::std::string* ModelData::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelData::release_version() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.version)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gnmi

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gnmi::SubscriptionList_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gnmi::SubscriptionList_Mode>() {
  return ::gnmi::SubscriptionList_Mode_descriptor();
}
template <> struct is_proto_enum< ::gnmi::UpdateResult_Operation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gnmi::UpdateResult_Operation>() {
  return ::gnmi::UpdateResult_Operation_descriptor();
}
template <> struct is_proto_enum< ::gnmi::GetRequest_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gnmi::GetRequest_DataType>() {
  return ::gnmi::GetRequest_DataType_descriptor();
}
template <> struct is_proto_enum< ::gnmi::Encoding> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gnmi::Encoding>() {
  return ::gnmi::Encoding_descriptor();
}
template <> struct is_proto_enum< ::gnmi::SubscriptionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gnmi::SubscriptionMode>() {
  return ::gnmi::SubscriptionMode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gnmi_2eproto__INCLUDED
