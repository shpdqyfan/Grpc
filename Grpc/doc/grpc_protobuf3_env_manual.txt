############################################################
# for c++ ##################################################
############################################################

GRPC: https://github.com/grpc/grpc/blob/master/INSTALL.md
PROTOBUF3.X: https://github.com/google/protobuf/blob/master/src/README.md
We can also refer to(but it's old): http://tangmi.me/grpc-experience/

1.Install grpc(Build from source, By default, the package will be installed to /usr ???): 
Pre-requisites: autoconf libtool
1.1. git clone -b $(curl -L http://grpc.io/release) https://github.com/grpc/grpc
1.2. cd grpc
1.3. git submodule update --init
1.4. make
1.5. sudo make install

2.Install protobuf(By default, the package will be installed to /usr/local !!!):
Pre-requisites1: If you compile gRPC from source(see "1.install grpc(build from source):"), 
                 the Makefile will automatically try and compile the protoc in third_party.
Pre-requisites2: autoconf automake libtool curl make g++ unzip
     cd third_party/protobuf
2.1. ./autogen.sh
2.2. ./configure
2.3. make
2.4. make check   #####(some errors happened, because of testunits lost. Ignore!)
2.5. sudo make install 

3.Add dynamic lib to ldconf:
Pre-requisites: refer to: http://blog.csdn.net/cqkxboy168/article/details/8657487
3.1. sudo vim /etc/ld.so.conf.d/grpc.conf
3.2. add a new line: "/usr/local/lib"
3.3. sudo ldconfig  #####refresh shared library cache.
3.4. export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH              ***Important***
3.5. export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH    ***Important***

4.Notice:
Why need step3 here?
By default, almost libs will be installed to /usr. The /usr/lib and /usr/lib64 are the default search path.
But sometimes a lib(like protobuf) will be installed to /usr/local. The /usr/local can't be searched. Then 
some errors happened, like is libxx can't found...
For this, we need to add /usr/local/lib to "ld.so.conf" to notify system that /usr/local/lib should be searched.
Also, we need to do step3.5 to tell system the right pkg-info path which you really want. The step3.4 indicates
the latest shared lib path.
If we never install the lib(like protobuf), I think /usr/local/libxx, PKG_CONFIG_PATH, LD_LIBRARY_PATH, ld.so.conf,
ld.so.conf.d are empty.

5.My environment:
5.1 grpc installed to /usr/local/lib
5.2 protobuf installed to /usr/local/lib 
5.2.1 protobuf installed to /usr/lib
Mistake: actually either 5.2 or 5.2.1;
Grpc and protobuf both installed to /usr/lib is good, because step3.0 not needed.
For now, see the above step3, I use /usr/local/lib as my protobuf.

########################################################
6.How to build this project?
6.1 install grpc and protobuf3
6.2 include gnmi.proto(https://github.com/openconfig/gnmi/blob/master/proto/gnmi/gnmi.proto)
6.3 open a new konsole and run 3.4/3.5
6.4 generate pb source files using following commands:
    protoc --cpp_out=./ gnmi.proto
    protoc --grpc_out=./ --plugin=protoc-gen-grpc=/usr/local/bin/grpc_cpp_plugin gnmi.proto
6.5 using the .h .cc files which generated by 6.4.
